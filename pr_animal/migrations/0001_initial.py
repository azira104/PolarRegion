# Generated by Django 4.2.6 on 2023-11-19 02:38

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='adeliePenguin',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('species', models.CharField(max_length=100)),
                ('season', models.IntegerField()),
                ('colony', models.CharField(max_length=100)),
                ('date_pair_count', models.DateField()),
                ('total_number_pairs_with_eggs', models.IntegerField()),
                ('total_number_of_pairs_without_eggs', models.IntegerField()),
                ('total_number_of_pairs', models.IntegerField()),
                ('date_chick_count', models.DateField()),
                ('total_number_of_chicks', models.IntegerField()),
                ('total_number_of_eggs', models.IntegerField()),
                ('total_number_of_nests_without_eggs', models.IntegerField()),
                ('date_fledgling_count', models.DateField()),
                ('total_number_of_fledglings', models.IntegerField()),
                ('comments', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='chinstrapPenguin',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('species', models.CharField(max_length=100)),
                ('colony', models.CharField(max_length=100)),
                ('season', models.IntegerField()),
                ('date_pair_count', models.DateField()),
                ('total_number_pairs_with_eggs', models.IntegerField()),
                ('total_number_of_pairs_without_eggs', models.IntegerField()),
                ('total_number_of_pairs', models.IntegerField()),
                ('date_chick_count', models.DateField()),
                ('total_number_of_chicks', models.IntegerField()),
                ('total_number_of_eggs', models.IntegerField()),
                ('total_number_of_nests_without_eggs', models.IntegerField()),
                ('date_fledgling_count', models.DateField()),
                ('total_number_of_fledglings', models.IntegerField()),
                ('comments', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='coral',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('salinity', models.FloatField()),
                ('january_temp', models.FloatField()),
                ('june_temp', models.FloatField()),
                ('area', models.FloatField()),
                ('latitude', models.FloatField()),
                ('longitude', models.FloatField()),
                ('type_of_sea', models.FloatField()),
                ('silt_sulfide', models.FloatField()),
                ('coral_status', models.FloatField()),
            ],
        ),
        migrations.CreateModel(
            name='gentooPenguin',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('species', models.CharField(max_length=100)),
                ('season', models.IntegerField()),
                ('date_pair_count', models.DateField()),
                ('total_number_pairs_with_eggs', models.IntegerField()),
                ('total_number_of_pairs_without_eggs', models.IntegerField()),
                ('total_number_of_pairs', models.IntegerField()),
                ('date_chick_count', models.DateField()),
                ('total_number_of_chicks', models.IntegerField()),
                ('total_number_of_eggs', models.IntegerField()),
                ('total_number_of_nests_without_eggs', models.IntegerField()),
                ('date_fledgling_count', models.DateField()),
                ('total_number_of_fledglings', models.IntegerField()),
                ('comments', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='giantPetrelBird',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('season', models.IntegerField()),
                ('date_of_nest_count', models.DateField()),
                ('total_number_of_nests', models.IntegerField()),
                ('date_chick_count', models.DateField()),
                ('total_number_of_chicks', models.IntegerField()),
                ('comments', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='krillbase',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('station', models.CharField(max_length=255)),
                ('record_type', models.CharField(max_length=100)),
                ('number_of_stations', models.IntegerField()),
                ('number_of_nets', models.IntegerField()),
                ('latitude', models.FloatField()),
                ('longitude', models.FloatField()),
                ('season', models.IntegerField()),
                ('days_from_1st_oct', models.IntegerField()),
                ('date', models.DateField()),
                ('date_accuracy', models.CharField(max_length=100)),
                ('net_time', models.TimeField()),
                ('gmt_or_local', models.CharField(max_length=100)),
                ('day_night', models.CharField(max_length=100)),
                ('day_night_method', models.IntegerField()),
                ('net_type', models.CharField(max_length=255)),
                ('mouth_area_of_net_m2', models.FloatField()),
                ('top_sampling_depth_m', models.FloatField()),
                ('bottom_sampling_depth_m', models.FloatField()),
                ('volume_filtered_m3', models.FloatField()),
                ('n_or_s_polar_front', models.CharField(max_length=100)),
                ('water_dep_mean_within_10km', models.FloatField()),
                ('water_depth_range_within_10km', models.FloatField()),
                ('climatological_temperature', models.FloatField()),
                ('number_of_krill_under_1m2', models.FloatField()),
                ('standardised_krill_under_1m2', models.FloatField()),
                ('number_of_salps_under_1m2', models.FloatField()),
            ],
        ),
    ]
